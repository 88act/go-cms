// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: act.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`              //用户id
	BeOnline     bool   `protobuf:"varint,3,opt,name=beOnline,proto3" json:"beOnline,omitempty"`          //类型
	ActType      string `protobuf:"bytes,4,opt,name=actType,proto3" json:"actType,omitempty"`             //活动类型
	BeMulti      bool   `protobuf:"varint,5,opt,name=beMulti,proto3" json:"beMulti,omitempty"`            //分期活动
	Phase        int32  `protobuf:"varint,6,opt,name=phase,proto3" json:"phase,omitempty"`                //分期
	Title        string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`                 //标题
	Desc         string `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`                   //简介
	Avater       string `protobuf:"bytes,9,opt,name=avater,proto3" json:"avater,omitempty"`               //缩略图
	MediaList    string `protobuf:"bytes,10,opt,name=mediaList,proto3" json:"mediaList,omitempty"`        //媒体列表
	Address      string `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`            //地址
	AreaId       int32  `protobuf:"varint,12,opt,name=areaId,proto3" json:"areaId,omitempty"`             //地区id
	Lng          int64  `protobuf:"varint,13,opt,name=lng,proto3" json:"lng,omitempty"`                   //经度
	Lat          int64  `protobuf:"varint,14,opt,name=lat,proto3" json:"lat,omitempty"`                   //纬度
	BeginTime    int64  `protobuf:"varint,15,opt,name=beginTime,proto3" json:"beginTime,omitempty"`       //开始时间
	EndTime      int64  `protobuf:"varint,16,opt,name=endTime,proto3" json:"endTime,omitempty"`           //结束时间
	LiveTime     int64  `protobuf:"varint,17,opt,name=liveTime,proto3" json:"liveTime,omitempty"`         //直播开始
	LiveEnd      int64  `protobuf:"varint,18,opt,name=liveEnd,proto3" json:"liveEnd,omitempty"`           //直播结束
	Presenter    string `protobuf:"bytes,19,opt,name=presenter,proto3" json:"presenter,omitempty"`        //主持/讲师
	PhoneKefu    string `protobuf:"bytes,20,opt,name=phoneKefu,proto3" json:"phoneKefu,omitempty"`        //客服电话
	PhoneHezu    string `protobuf:"bytes,21,opt,name=phoneHezu,proto3" json:"phoneHezu,omitempty"`        //合作电话
	Wx           string `protobuf:"bytes,22,opt,name=wx,proto3" json:"wx,omitempty"`                      //微信
	Qq           string `protobuf:"bytes,23,opt,name=qq,proto3" json:"qq,omitempty"`                      //QQ
	GroupId      string `protobuf:"bytes,24,opt,name=groupId,proto3" json:"groupId,omitempty"`            //群组id
	EndJoinTime  int64  `protobuf:"varint,25,opt,name=endJoinTime,proto3" json:"endJoinTime,omitempty"`   //结束报名
	Price        int32  `protobuf:"varint,26,opt,name=price,proto3" json:"price,omitempty"`               //票价
	PriceVip     int32  `protobuf:"varint,27,opt,name=priceVip,proto3" json:"priceVip,omitempty"`         //vip票价
	PriceDesc    string `protobuf:"bytes,28,opt,name=priceDesc,proto3" json:"priceDesc,omitempty"`        //票价描述
	RefundType   int32  `protobuf:"varint,29,opt,name=refundType,proto3" json:"refundType,omitempty"`     //退费类型
	RefundDays   int32  `protobuf:"varint,30,opt,name=refundDays,proto3" json:"refundDays,omitempty"`     //退费天
	BeShowjoin   int32  `protobuf:"varint,31,opt,name=beShowjoin,proto3" json:"beShowjoin,omitempty"`     //是否显示人数
	StatusAct    int32  `protobuf:"varint,32,opt,name=statusAct,proto3" json:"statusAct,omitempty"`       //活动状态
	MaxJoin      int32  `protobuf:"varint,33,opt,name=maxJoin,proto3" json:"maxJoin,omitempty"`           //最大报名人数
	NowJoin      int32  `protobuf:"varint,34,opt,name=nowJoin,proto3" json:"nowJoin,omitempty"`           //当前报名人数
	BeChosen     bool   `protobuf:"varint,35,opt,name=beChosen,proto3" json:"beChosen,omitempty"`         //是否精选
	BeWeek       bool   `protobuf:"varint,36,opt,name=beWeek,proto3" json:"beWeek,omitempty"`             //是否周末
	BeVip        bool   `protobuf:"varint,37,opt,name=beVip,proto3" json:"beVip,omitempty"`               //是否会员
	TotalWhole   int32  `protobuf:"varint,38,opt,name=totalWhole,proto3" json:"totalWhole,omitempty"`     //综合指数
	TotalShare   int32  `protobuf:"varint,39,opt,name=totalShare,proto3" json:"totalShare,omitempty"`     //总分享
	TotalFav     int32  `protobuf:"varint,40,opt,name=totalFav,proto3" json:"totalFav,omitempty"`         //总收藏
	TotalJoin    int32  `protobuf:"varint,41,opt,name=totalJoin,proto3" json:"totalJoin,omitempty"`       //总报名数
	TotalDiscuss int32  `protobuf:"varint,42,opt,name=totalDiscuss,proto3" json:"totalDiscuss,omitempty"` //总评论
	TotalClick   int32  `protobuf:"varint,43,opt,name=totalClick,proto3" json:"totalClick,omitempty"`     //总点击
	TotalStar    int32  `protobuf:"varint,44,opt,name=totalStar,proto3" json:"totalStar,omitempty"`       //总评
	TotalStar1   int32  `protobuf:"varint,45,opt,name=totalStar1,proto3" json:"totalStar1,omitempty"`     //总星评1
	TotalStar2   int32  `protobuf:"varint,46,opt,name=totalStar2,proto3" json:"totalStar2,omitempty"`     //总星评2
	TotalStar3   int32  `protobuf:"varint,47,opt,name=totalStar3,proto3" json:"totalStar3,omitempty"`     //总星评3
	Status       int32  `protobuf:"varint,48,opt,name=status,proto3" json:"status,omitempty"`             //状态
	StatusMsg    string `protobuf:"bytes,49,opt,name=statusMsg,proto3" json:"statusMsg,omitempty"`        //审核原因
	CatId        int32  `protobuf:"varint,50,opt,name=catId,proto3" json:"catId,omitempty"`               //系统栏目
	CatIdUser    int32  `protobuf:"varint,51,opt,name=catIdUser,proto3" json:"catIdUser,omitempty"`       //用户栏目
}

func (x *ActInfo) Reset() {
	*x = ActInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActInfo) ProtoMessage() {}

func (x *ActInfo) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActInfo.ProtoReflect.Descriptor instead.
func (*ActInfo) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{0}
}

func (x *ActInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ActInfo) GetBeOnline() bool {
	if x != nil {
		return x.BeOnline
	}
	return false
}

func (x *ActInfo) GetActType() string {
	if x != nil {
		return x.ActType
	}
	return ""
}

func (x *ActInfo) GetBeMulti() bool {
	if x != nil {
		return x.BeMulti
	}
	return false
}

func (x *ActInfo) GetPhase() int32 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *ActInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ActInfo) GetAvater() string {
	if x != nil {
		return x.Avater
	}
	return ""
}

func (x *ActInfo) GetMediaList() string {
	if x != nil {
		return x.MediaList
	}
	return ""
}

func (x *ActInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ActInfo) GetAreaId() int32 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *ActInfo) GetLng() int64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *ActInfo) GetLat() int64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *ActInfo) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ActInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ActInfo) GetLiveTime() int64 {
	if x != nil {
		return x.LiveTime
	}
	return 0
}

func (x *ActInfo) GetLiveEnd() int64 {
	if x != nil {
		return x.LiveEnd
	}
	return 0
}

func (x *ActInfo) GetPresenter() string {
	if x != nil {
		return x.Presenter
	}
	return ""
}

func (x *ActInfo) GetPhoneKefu() string {
	if x != nil {
		return x.PhoneKefu
	}
	return ""
}

func (x *ActInfo) GetPhoneHezu() string {
	if x != nil {
		return x.PhoneHezu
	}
	return ""
}

func (x *ActInfo) GetWx() string {
	if x != nil {
		return x.Wx
	}
	return ""
}

func (x *ActInfo) GetQq() string {
	if x != nil {
		return x.Qq
	}
	return ""
}

func (x *ActInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ActInfo) GetEndJoinTime() int64 {
	if x != nil {
		return x.EndJoinTime
	}
	return 0
}

func (x *ActInfo) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ActInfo) GetPriceVip() int32 {
	if x != nil {
		return x.PriceVip
	}
	return 0
}

func (x *ActInfo) GetPriceDesc() string {
	if x != nil {
		return x.PriceDesc
	}
	return ""
}

func (x *ActInfo) GetRefundType() int32 {
	if x != nil {
		return x.RefundType
	}
	return 0
}

func (x *ActInfo) GetRefundDays() int32 {
	if x != nil {
		return x.RefundDays
	}
	return 0
}

func (x *ActInfo) GetBeShowjoin() int32 {
	if x != nil {
		return x.BeShowjoin
	}
	return 0
}

func (x *ActInfo) GetStatusAct() int32 {
	if x != nil {
		return x.StatusAct
	}
	return 0
}

func (x *ActInfo) GetMaxJoin() int32 {
	if x != nil {
		return x.MaxJoin
	}
	return 0
}

func (x *ActInfo) GetNowJoin() int32 {
	if x != nil {
		return x.NowJoin
	}
	return 0
}

func (x *ActInfo) GetBeChosen() bool {
	if x != nil {
		return x.BeChosen
	}
	return false
}

func (x *ActInfo) GetBeWeek() bool {
	if x != nil {
		return x.BeWeek
	}
	return false
}

func (x *ActInfo) GetBeVip() bool {
	if x != nil {
		return x.BeVip
	}
	return false
}

func (x *ActInfo) GetTotalWhole() int32 {
	if x != nil {
		return x.TotalWhole
	}
	return 0
}

func (x *ActInfo) GetTotalShare() int32 {
	if x != nil {
		return x.TotalShare
	}
	return 0
}

func (x *ActInfo) GetTotalFav() int32 {
	if x != nil {
		return x.TotalFav
	}
	return 0
}

func (x *ActInfo) GetTotalJoin() int32 {
	if x != nil {
		return x.TotalJoin
	}
	return 0
}

func (x *ActInfo) GetTotalDiscuss() int32 {
	if x != nil {
		return x.TotalDiscuss
	}
	return 0
}

func (x *ActInfo) GetTotalClick() int32 {
	if x != nil {
		return x.TotalClick
	}
	return 0
}

func (x *ActInfo) GetTotalStar() int32 {
	if x != nil {
		return x.TotalStar
	}
	return 0
}

func (x *ActInfo) GetTotalStar1() int32 {
	if x != nil {
		return x.TotalStar1
	}
	return 0
}

func (x *ActInfo) GetTotalStar2() int32 {
	if x != nil {
		return x.TotalStar2
	}
	return 0
}

func (x *ActInfo) GetTotalStar3() int32 {
	if x != nil {
		return x.TotalStar3
	}
	return 0
}

func (x *ActInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActInfo) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *ActInfo) GetCatId() int32 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *ActInfo) GetCatIdUser() int32 {
	if x != nil {
		return x.CatIdUser
	}
	return 0
}

type ActDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ActDetailReq) Reset() {
	*x = ActDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActDetailReq) ProtoMessage() {}

func (x *ActDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActDetailReq.ProtoReflect.Descriptor instead.
func (*ActDetailReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{1}
}

func (x *ActDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ActDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Act *ActInfo `protobuf:"bytes,1,opt,name=act,proto3" json:"act,omitempty"`
}

func (x *ActDetailResp) Reset() {
	*x = ActDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActDetailResp) ProtoMessage() {}

func (x *ActDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActDetailResp.ProtoReflect.Descriptor instead.
func (*ActDetailResp) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{2}
}

func (x *ActDetailResp) GetAct() *ActInfo {
	if x != nil {
		return x.Act
	}
	return nil
}

type ActListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ActListReq) Reset() {
	*x = ActListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActListReq) ProtoMessage() {}

func (x *ActListReq) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActListReq.ProtoReflect.Descriptor instead.
func (*ActListReq) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{3}
}

func (x *ActListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ActListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ActListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ActInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ActListResp) Reset() {
	*x = ActListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_act_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActListResp) ProtoMessage() {}

func (x *ActListResp) ProtoReflect() protoreflect.Message {
	mi := &file_act_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActListResp.ProtoReflect.Descriptor instead.
func (*ActListResp) Descriptor() ([]byte, []int) {
	return file_act_proto_rawDescGZIP(), []int{4}
}

func (x *ActListResp) GetList() []*ActInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_act_proto protoreflect.FileDescriptor

var file_act_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22,
	0xe3, 0x0a, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x65, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4b, 0x65, 0x66, 0x75, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4b, 0x65, 0x66, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x48, 0x65, 0x7a, 0x75, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x48, 0x65, 0x7a, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x78, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x77, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x71, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x71, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x56, 0x69, 0x70, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x56, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x79,
	0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x6a, 0x6f, 0x69,
	0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x6a,
	0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x74,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x4a, 0x6f, 0x69, 0x6e, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x6f, 0x77, 0x4a, 0x6f, 0x69, 0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f,
	0x77, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x43, 0x68, 0x6f, 0x73, 0x65,
	0x6e, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x43, 0x68, 0x6f, 0x73, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x62, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x56,
	0x69, 0x70, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x65, 0x56, 0x69, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x27, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x76, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x76, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x31, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x32, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x33, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x30, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x49, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x74, 0x49,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x03, 0x61, 0x63, 0x74, 0x22, 0x3c, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x2e, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x32, 0x63, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_act_proto_rawDescOnce sync.Once
	file_act_proto_rawDescData = file_act_proto_rawDesc
)

func file_act_proto_rawDescGZIP() []byte {
	file_act_proto_rawDescOnce.Do(func() {
		file_act_proto_rawDescData = protoimpl.X.CompressGZIP(file_act_proto_rawDescData)
	})
	return file_act_proto_rawDescData
}

var file_act_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_act_proto_goTypes = []interface{}{
	(*ActInfo)(nil),       // 0: pb.ActInfo
	(*ActDetailReq)(nil),  // 1: pb.ActDetailReq
	(*ActDetailResp)(nil), // 2: pb.ActDetailResp
	(*ActListReq)(nil),    // 3: pb.ActListReq
	(*ActListResp)(nil),   // 4: pb.ActListResp
}
var file_act_proto_depIdxs = []int32{
	0, // 0: pb.ActDetailResp.act:type_name -> pb.ActInfo
	0, // 1: pb.ActListResp.list:type_name -> pb.ActInfo
	1, // 2: pb.act.actDetail:input_type -> pb.ActDetailReq
	3, // 3: pb.act.actList:input_type -> pb.ActListReq
	2, // 4: pb.act.actDetail:output_type -> pb.ActDetailResp
	4, // 5: pb.act.actList:output_type -> pb.ActListResp
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_act_proto_init() }
func file_act_proto_init() {
	if File_act_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_act_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_act_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_act_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_act_proto_goTypes,
		DependencyIndexes: file_act_proto_depIdxs,
		MessageInfos:      file_act_proto_msgTypes,
	}.Build()
	File_act_proto = out.File
	file_act_proto_rawDesc = nil
	file_act_proto_goTypes = nil
	file_act_proto_depIdxs = nil
}
