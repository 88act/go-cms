package initialize

import (
	"net/http"

	_ "go-cms/docs"
	"go-cms/global"
	"go-cms/middleware"
	"go-cms/router"

	"github.com/gin-gonic/gin"
	ginSwagger "github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
)

// 初始化总路由

func Routers() *gin.Engine {
	var Router = gin.Default()

	// 如果想要不使用nginx代理前端网页，可以修改 web/.env.production 下的
	// VUE_APP_BASE_API = /
	// VUE_APP_BASE_PATH = http://localhost
	// 然后执行打包命令 npm run build。在打开下面4行注释
	//Router.LoadHTMLGlob("./dist/*.html") // npm打包成dist的路径
	//Router.Static("/favicon.ico", "./dist/favicon.ico")
	//Router.Static("/static", "./dist/assets")   // dist里面的静态资源
	//Router.StaticFile("/", "./dist/index.html") // 前端网页入口页面
	//Router.StaticFS(global.REDIS.Local.Path, http.Dir(global.REDIS.Local.Path)) // 为用户头像和文件提供静态地址
	Router.StaticFS("res/sys", http.Dir("res/sys"))   // 为用户头像和文件提供静态地址
	Router.StaticFS("res/user", http.Dir("res/user")) // 为用户头像和文件提供静态地址

	// Router.Use(middleware.LoadTls())  // 打开就能玩https了
	global.LOG.Info("use middleware logger")
	// 跨域
	//Router.Use(middleware.Cors()) // 如需跨域可以打开
	global.LOG.Info("use middleware cors")
	Router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	global.LOG.Info("register swagger handler")

	//add by ljd 20210927
	//为没有配置处理函数的路由添加处理程序，默认情况下它返回404代码
	Router.NoRoute(func(c *gin.Context) {
		c.JSON(http.StatusNotFound, gin.H{
			"msg": "go-cms没有路由配置 404",
		})
	})
	// 方便统一添加路由组前缀 多服务器上线使用
	//获取路由组实例
	systemRouter := router.RouterGroupApp.System
	exampleRouter := router.RouterGroupApp.Example
	businessRouter := router.RouterGroupApp.Business
	commonRouter := router.RouterGroupApp.Common
	PublicGroup := Router.Group("")
	{
		// 健康监测 http://localhost:8080/api/health
		PublicGroup.GET("/health", func(c *gin.Context) {
			c.JSON(200, "ok health")
		})
		// 测试   http://localhost:8080/api/test
		// 注意，vue用了代理api前缀    http://127.0.0.1:8888/health
		// add by ljd 20210927
		PublicGroup.GET("/test", func(c *gin.Context) {
			c.JSON(200, "test")
		})
		PublicGroup.GET("/", func(c *gin.Context) {
			c.JSON(200, "go-cms server")
		})
	}
	{
		systemRouter.InitBaseRouter(PublicGroup) // 注册基础功能路由 不做鉴权
		systemRouter.InitInitRouter(PublicGroup) // 自动初始化相关
	}
	PrivateGroup := Router.Group("")
	PrivateGroup.Use(middleware.JWTAuth()).Use(middleware.CasbinHandler())
	{
		systemRouter.InitApiRouter(PrivateGroup)    // 注册功能api路由
		systemRouter.InitJwtRouter(PrivateGroup)    // jwt相关路由
		systemRouter.InitUserRouter(PrivateGroup)   // 注册用户路由
		systemRouter.InitMenuRouter(PrivateGroup)   // 注册menu路由
		systemRouter.InitSystemRouter(PrivateGroup) // system相关路由
		systemRouter.InitCasbinRouter(PrivateGroup) // 权限相关路由

		systemRouter.InitAuthorityRouter(PrivateGroup)              // 注册角色路由
		systemRouter.InitSysDictionaryRouter(PrivateGroup)          // 字典管理
		systemRouter.InitSysOperationRecordRouter(PrivateGroup)     // 操作记录
		systemRouter.InitSysDictionaryDetailRouter(PrivateGroup)    // 字典详情管理
		exampleRouter.InitFileUploadAndDownloadRouter(PrivateGroup) // 文件上传下载功能路由
		exampleRouter.InitExcelRouter(PrivateGroup)                 // 表格导入导出
		exampleRouter.InitCustomerRouter(PrivateGroup)              // 客户路由
		// add by ljd 20210927 增加通用 数据库 文件 路由
		commonRouter.InitCommonDbRouter(PublicGroup)
		commonRouter.InitCommonFileRouter(PublicGroup)
		// Code generated by github.com/88act/go-cms/server Begin; DO NOT EDIT.
		businessRouter.InitColHsjRouter(PrivateGroup)
		businessRouter.InitBasicFileRouter(PrivateGroup)
		businessRouter.InitColKeyFieldRouter(PrivateGroup)
		businessRouter.InitColCollectRouter(PrivateGroup)
		businessRouter.InitCmsCatRouter(PrivateGroup)
		businessRouter.InitCmsArticleRouter(PrivateGroup)
		businessRouter.InitCmsAdRouter(PrivateGroup)
		businessRouter.InitCmsAdSeatRouter(PrivateGroup)
		businessRouter.InitImTxFileRouter(PrivateGroup)
		businessRouter.InitImTxMsgRouter(PrivateGroup)
		businessRouter.InitImTxMsgFileRouter(PrivateGroup)
		businessRouter.InitImTximRouter(PrivateGroup)
		businessRouter.InitK8sDeploymentsRouter(PrivateGroup)
		businessRouter.InitK8sClustersRouter(PrivateGroup)
		businessRouter.InitK8sNamespacesRouter(PrivateGroup)
		businessRouter.InitK8sNodesRouter(PrivateGroup)
		businessRouter.InitK8sPodsRouter(PrivateGroup)
		businessRouter.InitMemAddressRouter(PrivateGroup)
		businessRouter.InitBasicAreaRouter(PrivateGroup)
		businessRouter.InitMemUserLogRouter(PrivateGroup)
		businessRouter.InitMemUserSafeRouter(PrivateGroup)
		businessRouter.InitMemUserRouter(PrivateGroup)
		businessRouter.InitBbPiContactsRouter(PrivateGroup)
		businessRouter.InitBbPiDepartmentRouter(PrivateGroup)
		businessRouter.InitBbPiDeviceRouter(PrivateGroup)
		businessRouter.InitBbPiInstitutionRouter(PrivateGroup)
		businessRouter.InitBbPiInstitutionBusinessRouter(PrivateGroup)
		businessRouter.InitBbPiPersonRouter(PrivateGroup)
		businessRouter.InitBbPiServicePointRouter(PrivateGroup)
		businessRouter.InitBbPiStaffRouter(PrivateGroup)
		businessRouter.InitBbPiTreatmentOrderRouter(PrivateGroup)
		businessRouter.InitBbPiTreatmentReferralRouter(PrivateGroup)
		businessRouter.InitBbPiUpFieldRouter(PrivateGroup)
		businessRouter.InitBbPiTreatmentDiagnoseRouter(PrivateGroup)
		businessRouter.InitBbPiTreatmentRecordRouter(PrivateGroup)
		// Code generated by github.com/88act/go-cms/server End; DO NOT EDIT.
	}

	InstallPlugin(PublicGroup, PrivateGroup) // 安装插件

	global.LOG.Info("router register success")
	return Router
}
